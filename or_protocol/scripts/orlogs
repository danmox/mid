#!/usr/bin/env python3

import argparse
import re
from pathlib import Path


def merge(args):

    if len(args.logs) < 2:
        print('must provide 2 or more logfiles to merge')
        return

    log_filenames = [Path(f) for f in args.logs]
    for name in log_filenames:
        if not name.exists():
            print(f'logfile {name} does not exist')
            return

    print(f"merging: {', '.join(args.logs)}")

    entries = []
    for filename in log_filenames:
        # open file and extract the timestamp from each line
        with open(filename, 'r') as f:
            for line in f:
                ts = float(re.match('^\[([0-9.]+)\].*$', line).group(1))
                entries.append((ts, line))

    # sort by timestamp
    entries.sort(key=lambda x: x[0])

    # write to output file
    outlogfilename = args.output
    with open(outlogfilename, 'w') as f:
        for ts, line in entries:
            f.write(line)

    print(f'wrote contents to: {outlogfilename}')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='operations on rosbag logs generated by or_protocol')
    subparsers = parser.add_subparsers(dest='command', required=True)

    # bag merging
    merge_parser = subparsers.add_parser('merge', help='merge multiple rosbags')
    merge_parser.add_argument('logs', type=str, nargs='+', help='logfiles to merge')
    merge_parser.add_argument('-o', '--output', type=str, default='merged.txt', help='name of output logfile')

    args = parser.parse_args()

    if args.command == 'merge':
        merge(args)
